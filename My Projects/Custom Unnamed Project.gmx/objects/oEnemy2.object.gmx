<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemey2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>EnemySpeed = 120 / room_speed

newSpawn = 3 * room_speed   // variable on how often it spawns another enemy like it
newSpawnKeepTrackOf = newSpawn

Life = 10   //number of hits before dying

speed = EnemySpeed

// sets it in the view of the player on spawn facing a random direction

direction = random(360)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Facing

image_angle = direction

// Collision

if y &lt; 0 or y &gt; room_height
{
    vspeed = -vspeed 
}

if x &lt; 0 or x &gt; room_width
{
    hspeed = -hspeed 
}

newSpawn --

if newSpawn == 0{
    instance_create(random(view_wview[0]) + view_xview[0], random(view_hview[0]) + view_yview[0], oEnemy2)
    newSpawn = newSpawnKeepTrackOf
}


// Damage

nearestPlayer = instance_nearest(x,y,oPlayer)

hitBullet = instance_place(x,y,oBullet)

if instance_exists(hitBullet)
{
    with hitBullet
    {
        instance_destroy()
    }
    
    Life--
    
    if Life == 0 
    {
        for (i = 0; i &lt; 10; i++)
        {
            Enemy2Chunk = instance_create(x,y, oEnemy2DestroyedBits)
            Enemy2Chunk.direction = random(360)
            Enemy2Chunk.speed = random_range(500, 700)/room_speed
        }
        instance_destroy()
    }
    
}

hitPlayer = instance_place(x,y,oPlayer)
 
// Player Gets Hit

/*
if instance_exists(hitPlayer)
{
    with hitPlayer
    {
        image_xscale =  image_xscale - .2
        image_yscale = image_xscale
        if image_xscale &lt;= 0
        {
            instance_destroy()   
            instance_create(view_wview[0]*.5 + view_xview[0], view_hview[0]*.5 + + view_yview[0], oGameOver)
        }
    }
    image_xscale = image_xscale + .3
    image_yscale = image_xscale
}
*/

x = clamp(x, 0, room_width)
y = clamp(y, 0, room_height)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
